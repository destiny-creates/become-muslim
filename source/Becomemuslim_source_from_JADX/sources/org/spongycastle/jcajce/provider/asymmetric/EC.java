package org.spongycastle.jcajce.provider.asymmetric;

import org.spongycastle.asn1.bsi.BSIObjectIdentifiers;
import org.spongycastle.asn1.eac.EACObjectIdentifiers;
import org.spongycastle.asn1.sec.SECObjectIdentifiers;
import org.spongycastle.asn1.teletrust.TeleTrusTObjectIdentifiers;
import org.spongycastle.asn1.x9.X9ObjectIdentifiers;
import org.spongycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi.ECMQV;
import org.spongycastle.jcajce.provider.config.ConfigurableProvider;
import org.spongycastle.jcajce.provider.util.AsymmetricAlgorithmProvider;
import org.spongycastle.util.Properties;

public class EC {

    public static class Mappings extends AsymmetricAlgorithmProvider {
        /* renamed from: a */
        public void mo5864a(ConfigurableProvider configurableProvider) {
            configurableProvider.mo5883a("AlgorithmParameters.EC", "org.spongycastle.jcajce.provider.asymmetric.ec.AlgorithmParametersSpi");
            configurableProvider.mo5883a("KeyAgreement.ECDH", "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$DH");
            configurableProvider.mo5883a("KeyAgreement.ECDHC", "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$DHC");
            configurableProvider.mo5883a("KeyAgreement.ECCDH", "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$DHC");
            StringBuilder stringBuilder = new StringBuilder();
            stringBuilder.append("KeyAgreement.");
            stringBuilder.append(X9ObjectIdentifiers.f22157X);
            configurableProvider.mo5883a(stringBuilder.toString(), "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$DHwithSHA1KDFAndSharedInfo");
            stringBuilder = new StringBuilder();
            stringBuilder.append("KeyAgreement.");
            stringBuilder.append(X9ObjectIdentifiers.f22158Y);
            configurableProvider.mo5883a(stringBuilder.toString(), "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$CDHwithSHA1KDFAndSharedInfo");
            stringBuilder = new StringBuilder();
            stringBuilder.append("KeyAgreement.");
            stringBuilder.append(SECObjectIdentifiers.f21917J);
            configurableProvider.mo5883a(stringBuilder.toString(), "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$DHwithSHA224KDFAndSharedInfo");
            stringBuilder = new StringBuilder();
            stringBuilder.append("KeyAgreement.");
            stringBuilder.append(SECObjectIdentifiers.f21921N);
            configurableProvider.mo5883a(stringBuilder.toString(), "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$CDHwithSHA224KDFAndSharedInfo");
            stringBuilder = new StringBuilder();
            stringBuilder.append("KeyAgreement.");
            stringBuilder.append(SECObjectIdentifiers.f21918K);
            configurableProvider.mo5883a(stringBuilder.toString(), "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$DHwithSHA256KDFAndSharedInfo");
            stringBuilder = new StringBuilder();
            stringBuilder.append("KeyAgreement.");
            stringBuilder.append(SECObjectIdentifiers.f21922O);
            configurableProvider.mo5883a(stringBuilder.toString(), "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$CDHwithSHA256KDFAndSharedInfo");
            stringBuilder = new StringBuilder();
            stringBuilder.append("KeyAgreement.");
            stringBuilder.append(SECObjectIdentifiers.f21919L);
            configurableProvider.mo5883a(stringBuilder.toString(), "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$DHwithSHA384KDFAndSharedInfo");
            stringBuilder = new StringBuilder();
            stringBuilder.append("KeyAgreement.");
            stringBuilder.append(SECObjectIdentifiers.f21923P);
            configurableProvider.mo5883a(stringBuilder.toString(), "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$CDHwithSHA384KDFAndSharedInfo");
            stringBuilder = new StringBuilder();
            stringBuilder.append("KeyAgreement.");
            stringBuilder.append(SECObjectIdentifiers.f21920M);
            configurableProvider.mo5883a(stringBuilder.toString(), "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$DHwithSHA512KDFAndSharedInfo");
            stringBuilder = new StringBuilder();
            stringBuilder.append("KeyAgreement.");
            stringBuilder.append(SECObjectIdentifiers.f21924Q);
            configurableProvider.mo5883a(stringBuilder.toString(), "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$CDHwithSHA512KDFAndSharedInfo");
            configurableProvider.mo5883a("KeyAgreement.ECDHWITHSHA1KDF", "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$DHwithSHA1KDF");
            configurableProvider.mo5883a("KeyAgreement.ECCDHWITHSHA1CKDF", "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$DHwithSHA1CKDF");
            configurableProvider.mo5883a("KeyAgreement.ECCDHWITHSHA256CKDF", "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$DHwithSHA256CKDF");
            configurableProvider.mo5883a("KeyAgreement.ECCDHWITHSHA384CKDF", "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$DHwithSHA384CKDF");
            configurableProvider.mo5883a("KeyAgreement.ECCDHWITHSHA512CKDF", "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$DHwithSHA512CKDF");
            m36125a(configurableProvider, X9ObjectIdentifiers.f22170k, "EC", new org.spongycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi.EC());
            m36125a(configurableProvider, X9ObjectIdentifiers.f22158Y, "EC", new org.spongycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi.EC());
            m36125a(configurableProvider, X9ObjectIdentifiers.f22159Z, "ECMQV", new ECMQV());
            m36125a(configurableProvider, SECObjectIdentifiers.f21917J, "EC", new org.spongycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi.EC());
            m36125a(configurableProvider, SECObjectIdentifiers.f21921N, "EC", new org.spongycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi.EC());
            m36125a(configurableProvider, SECObjectIdentifiers.f21918K, "EC", new org.spongycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi.EC());
            m36125a(configurableProvider, SECObjectIdentifiers.f21922O, "EC", new org.spongycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi.EC());
            m36125a(configurableProvider, SECObjectIdentifiers.f21919L, "EC", new org.spongycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi.EC());
            m36125a(configurableProvider, SECObjectIdentifiers.f21923P, "EC", new org.spongycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi.EC());
            m36125a(configurableProvider, SECObjectIdentifiers.f21920M, "EC", new org.spongycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi.EC());
            m36125a(configurableProvider, SECObjectIdentifiers.f21924Q, "EC", new org.spongycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi.EC());
            m36124a(configurableProvider, X9ObjectIdentifiers.f22170k, "EC");
            m36124a(configurableProvider, X9ObjectIdentifiers.f22157X, "EC");
            m36124a(configurableProvider, X9ObjectIdentifiers.f22158Y, "EC");
            m36124a(configurableProvider, SECObjectIdentifiers.f21917J, "EC");
            m36124a(configurableProvider, SECObjectIdentifiers.f21921N, "EC");
            m36124a(configurableProvider, SECObjectIdentifiers.f21918K, "EC");
            m36124a(configurableProvider, SECObjectIdentifiers.f21922O, "EC");
            m36124a(configurableProvider, SECObjectIdentifiers.f21919L, "EC");
            m36124a(configurableProvider, SECObjectIdentifiers.f21923P, "EC");
            m36124a(configurableProvider, SECObjectIdentifiers.f21920M, "EC");
            m36124a(configurableProvider, SECObjectIdentifiers.f21924Q, "EC");
            if (!Properties.m29413a("org.spongycastle.ec.disable_mqv")) {
                configurableProvider.mo5883a("KeyAgreement.ECMQV", "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$MQV");
                configurableProvider.mo5883a("KeyAgreement.ECMQVWITHSHA1CKDF", "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$MQVwithSHA1CKDF");
                configurableProvider.mo5883a("KeyAgreement.ECMQVWITHSHA224CKDF", "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$MQVwithSHA224CKDF");
                configurableProvider.mo5883a("KeyAgreement.ECMQVWITHSHA256CKDF", "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$MQVwithSHA256CKDF");
                configurableProvider.mo5883a("KeyAgreement.ECMQVWITHSHA384CKDF", "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$MQVwithSHA384CKDF");
                configurableProvider.mo5883a("KeyAgreement.ECMQVWITHSHA512CKDF", "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$MQVwithSHA512CKDF");
                stringBuilder = new StringBuilder();
                stringBuilder.append("KeyAgreement.");
                stringBuilder.append(X9ObjectIdentifiers.f22159Z);
                configurableProvider.mo5883a(stringBuilder.toString(), "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$MQVwithSHA1KDFAndSharedInfo");
                stringBuilder = new StringBuilder();
                stringBuilder.append("KeyAgreement.");
                stringBuilder.append(SECObjectIdentifiers.f21925R);
                configurableProvider.mo5883a(stringBuilder.toString(), "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$MQVwithSHA224KDFAndSharedInfo");
                stringBuilder = new StringBuilder();
                stringBuilder.append("KeyAgreement.");
                stringBuilder.append(SECObjectIdentifiers.f21926S);
                configurableProvider.mo5883a(stringBuilder.toString(), "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$MQVwithSHA256KDFAndSharedInfo");
                stringBuilder = new StringBuilder();
                stringBuilder.append("KeyAgreement.");
                stringBuilder.append(SECObjectIdentifiers.f21927T);
                configurableProvider.mo5883a(stringBuilder.toString(), "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$MQVwithSHA384KDFAndSharedInfo");
                stringBuilder = new StringBuilder();
                stringBuilder.append("KeyAgreement.");
                stringBuilder.append(SECObjectIdentifiers.f21928U);
                configurableProvider.mo5883a(stringBuilder.toString(), "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$MQVwithSHA512KDFAndSharedInfo");
                m36125a(configurableProvider, X9ObjectIdentifiers.f22157X, "EC", new org.spongycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi.EC());
                m36124a(configurableProvider, X9ObjectIdentifiers.f22159Z, "EC");
                m36125a(configurableProvider, SECObjectIdentifiers.f21925R, "ECMQV", new ECMQV());
                m36124a(configurableProvider, SECObjectIdentifiers.f21926S, "EC");
                m36125a(configurableProvider, SECObjectIdentifiers.f21926S, "ECMQV", new ECMQV());
                m36124a(configurableProvider, SECObjectIdentifiers.f21925R, "EC");
                m36125a(configurableProvider, SECObjectIdentifiers.f21927T, "ECMQV", new ECMQV());
                m36124a(configurableProvider, SECObjectIdentifiers.f21927T, "EC");
                m36125a(configurableProvider, SECObjectIdentifiers.f21928U, "ECMQV", new ECMQV());
                m36124a(configurableProvider, SECObjectIdentifiers.f21928U, "EC");
                configurableProvider.mo5883a("KeyFactory.ECMQV", "org.spongycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi$ECMQV");
                configurableProvider.mo5883a("KeyPairGenerator.ECMQV", "org.spongycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$ECMQV");
            }
            configurableProvider.mo5883a("KeyFactory.EC", "org.spongycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi$EC");
            configurableProvider.mo5883a("KeyFactory.ECDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi$ECDSA");
            configurableProvider.mo5883a("KeyFactory.ECDH", "org.spongycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi$ECDH");
            configurableProvider.mo5883a("KeyFactory.ECDHC", "org.spongycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi$ECDHC");
            configurableProvider.mo5883a("KeyPairGenerator.EC", "org.spongycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC");
            configurableProvider.mo5883a("KeyPairGenerator.ECDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$ECDSA");
            configurableProvider.mo5883a("KeyPairGenerator.ECDH", "org.spongycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$ECDH");
            configurableProvider.mo5883a("KeyPairGenerator.ECDHWITHSHA1KDF", "org.spongycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$ECDH");
            configurableProvider.mo5883a("KeyPairGenerator.ECDHC", "org.spongycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$ECDHC");
            configurableProvider.mo5883a("KeyPairGenerator.ECIES", "org.spongycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$ECDH");
            configurableProvider.mo5883a("Cipher.ECIES", "org.spongycastle.jcajce.provider.asymmetric.ec.IESCipher$ECIES");
            configurableProvider.mo5883a("Cipher.ECIESwithAES", "org.spongycastle.jcajce.provider.asymmetric.ec.IESCipher$ECIESwithAES");
            configurableProvider.mo5883a("Cipher.ECIESWITHAES", "org.spongycastle.jcajce.provider.asymmetric.ec.IESCipher$ECIESwithAES");
            configurableProvider.mo5883a("Cipher.ECIESwithDESEDE", "org.spongycastle.jcajce.provider.asymmetric.ec.IESCipher$ECIESwithDESede");
            configurableProvider.mo5883a("Cipher.ECIESWITHDESEDE", "org.spongycastle.jcajce.provider.asymmetric.ec.IESCipher$ECIESwithDESede");
            configurableProvider.mo5883a("Cipher.ECIESwithAES-CBC", "org.spongycastle.jcajce.provider.asymmetric.ec.IESCipher$ECIESwithAESCBC");
            configurableProvider.mo5883a("Cipher.ECIESWITHAES-CBC", "org.spongycastle.jcajce.provider.asymmetric.ec.IESCipher$ECIESwithAESCBC");
            configurableProvider.mo5883a("Cipher.ECIESwithDESEDE-CBC", "org.spongycastle.jcajce.provider.asymmetric.ec.IESCipher$ECIESwithDESedeCBC");
            configurableProvider.mo5883a("Cipher.ECIESWITHDESEDE-CBC", "org.spongycastle.jcajce.provider.asymmetric.ec.IESCipher$ECIESwithDESedeCBC");
            configurableProvider.mo5883a("Cipher.OldECIES", "org.spongycastle.jcajce.provider.asymmetric.ec.IESCipher$OldECIES");
            configurableProvider.mo5883a("Cipher.OldECIESwithAES", "org.spongycastle.jcajce.provider.asymmetric.ec.IESCipher$OldECIESwithAES");
            configurableProvider.mo5883a("Cipher.OldECIESWITHAES", "org.spongycastle.jcajce.provider.asymmetric.ec.IESCipher$OldECIESwithAES");
            configurableProvider.mo5883a("Cipher.OldECIESwithDESEDE", "org.spongycastle.jcajce.provider.asymmetric.ec.IESCipher$OldECIESwithDESede");
            configurableProvider.mo5883a("Cipher.OldECIESWITHDESEDE", "org.spongycastle.jcajce.provider.asymmetric.ec.IESCipher$OldECIESwithDESede");
            configurableProvider.mo5883a("Cipher.OldECIESwithAES-CBC", "org.spongycastle.jcajce.provider.asymmetric.ec.IESCipher$OldECIESwithAESCBC");
            configurableProvider.mo5883a("Cipher.OldECIESWITHAES-CBC", "org.spongycastle.jcajce.provider.asymmetric.ec.IESCipher$OldECIESwithAESCBC");
            configurableProvider.mo5883a("Cipher.OldECIESwithDESEDE-CBC", "org.spongycastle.jcajce.provider.asymmetric.ec.IESCipher$OldECIESwithDESedeCBC");
            configurableProvider.mo5883a("Cipher.OldECIESWITHDESEDE-CBC", "org.spongycastle.jcajce.provider.asymmetric.ec.IESCipher$OldECIESwithDESedeCBC");
            configurableProvider.mo5883a("Signature.ECDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDSA");
            configurableProvider.mo5883a("Signature.NONEwithECDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDSAnone");
            configurableProvider.mo5883a("Alg.Alias.Signature.SHA1withECDSA", "ECDSA");
            configurableProvider.mo5883a("Alg.Alias.Signature.ECDSAwithSHA1", "ECDSA");
            configurableProvider.mo5883a("Alg.Alias.Signature.SHA1WITHECDSA", "ECDSA");
            configurableProvider.mo5883a("Alg.Alias.Signature.ECDSAWITHSHA1", "ECDSA");
            configurableProvider.mo5883a("Alg.Alias.Signature.SHA1WithECDSA", "ECDSA");
            configurableProvider.mo5883a("Alg.Alias.Signature.ECDSAWithSHA1", "ECDSA");
            configurableProvider.mo5883a("Alg.Alias.Signature.1.2.840.10045.4.1", "ECDSA");
            stringBuilder = new StringBuilder();
            stringBuilder.append("Alg.Alias.Signature.");
            stringBuilder.append(TeleTrusTObjectIdentifiers.f21990j);
            configurableProvider.mo5883a(stringBuilder.toString(), "ECDSA");
            configurableProvider.mo5883a("Signature.ECDDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDetDSA");
            configurableProvider.mo5883a("Signature.SHA1WITHECDDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDetDSA");
            configurableProvider.mo5883a("Signature.SHA224WITHECDDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDetDSA224");
            configurableProvider.mo5883a("Signature.SHA256WITHECDDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDetDSA256");
            configurableProvider.mo5883a("Signature.SHA384WITHECDDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDetDSA384");
            configurableProvider.mo5883a("Signature.SHA512WITHECDDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDetDSA512");
            configurableProvider.mo5883a("Alg.Alias.Signature.DETECDSA", "ECDDSA");
            configurableProvider.mo5883a("Alg.Alias.Signature.SHA1WITHDETECDSA", "SHA1WITHECDDSA");
            configurableProvider.mo5883a("Alg.Alias.Signature.SHA224WITHDETECDSA", "SHA224WITHECDDSA");
            configurableProvider.mo5883a("Alg.Alias.Signature.SHA256WITHDETECDSA", "SHA256WITHECDDSA");
            configurableProvider.mo5883a("Alg.Alias.Signature.SHA384WITHDETECDSA", "SHA384WITHECDDSA");
            configurableProvider.mo5883a("Alg.Alias.Signature.SHA512WITHDETECDSA", "SHA512WITHECDDSA");
            m36123a(configurableProvider, "SHA224", "ECDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDSA224", X9ObjectIdentifiers.f22172m);
            m36123a(configurableProvider, "SHA256", "ECDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDSA256", X9ObjectIdentifiers.f22173n);
            ConfigurableProvider configurableProvider2 = configurableProvider;
            m36123a(configurableProvider2, "SHA384", "ECDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDSA384", X9ObjectIdentifiers.f22174o);
            m36123a(configurableProvider, "SHA512", "ECDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDSA512", X9ObjectIdentifiers.f22175p);
            m36123a(configurableProvider2, "RIPEMD160", "ECDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDSARipeMD160", TeleTrusTObjectIdentifiers.f21991k);
            configurableProvider.mo5883a("Signature.SHA1WITHECNR", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecNR");
            configurableProvider.mo5883a("Signature.SHA224WITHECNR", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecNR224");
            configurableProvider.mo5883a("Signature.SHA256WITHECNR", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecNR256");
            configurableProvider.mo5883a("Signature.SHA384WITHECNR", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecNR384");
            configurableProvider.mo5883a("Signature.SHA512WITHECNR", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecNR512");
            m36123a(configurableProvider, "SHA1", "CVC-ECDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecCVCDSA", EACObjectIdentifiers.f21616s);
            m36123a(configurableProvider, "SHA224", "CVC-ECDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecCVCDSA224", EACObjectIdentifiers.f21617t);
            configurableProvider2 = configurableProvider;
            m36123a(configurableProvider2, "SHA256", "CVC-ECDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecCVCDSA256", EACObjectIdentifiers.f21618u);
            ConfigurableProvider configurableProvider3 = configurableProvider;
            m36123a(configurableProvider3, "SHA384", "CVC-ECDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecCVCDSA384", EACObjectIdentifiers.f21619v);
            m36123a(configurableProvider2, "SHA512", "CVC-ECDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecCVCDSA512", EACObjectIdentifiers.f21620w);
            m36123a(configurableProvider3, "SHA1", "PLAIN-ECDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecCVCDSA", BSIObjectIdentifiers.f21489d);
            m36123a(configurableProvider2, "SHA224", "PLAIN-ECDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecCVCDSA224", BSIObjectIdentifiers.f21490e);
            m36123a(configurableProvider3, "SHA256", "PLAIN-ECDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecCVCDSA256", BSIObjectIdentifiers.f21491f);
            m36123a(configurableProvider2, "SHA384", "PLAIN-ECDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecCVCDSA384", BSIObjectIdentifiers.f21492g);
            m36123a(configurableProvider3, "SHA512", "PLAIN-ECDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecCVCDSA512", BSIObjectIdentifiers.f21493h);
            m36123a(configurableProvider2, "RIPEMD160", "PLAIN-ECDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecPlainDSARP160", BSIObjectIdentifiers.f21494i);
        }
    }
}
